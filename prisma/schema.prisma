// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = []
}

generator erd {
  provider = "prisma-erd-generator"
  theme    = "forest"
}

datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

// ------ USER MODEL
enum UserRoleType {
  CONSUMER
  ADMIN
}

model User {
  id         String @id @default(uuid()) @db.Char(36)
  firebaseId String

  email String       @unique @db.VarChar(320)
  name  String       @db.VarChar(100)
  role  UserRoleType @default(CONSUMER)

  birthDate                DateTime?
  preferredSearchRangeInKm Decimal   @db.Decimal(4, 2)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  Price Price[]
}

// ------ ESTABLISHMENT MODEL
model Establishment {
  id String @id @default(uuid()) @db.Char(36)

  name      String
  latitude  Decimal @db.Decimal(10, 6)
  longitude Decimal @db.Decimal(10, 6)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  Price Price[]
}

// ------ PRODUCT MODEL
enum UnitType {
  G
  KG
  EA
  BOX
  DZ
}

model Product {
  id String @id @default(uuid()) @db.Char(36)

  name String   @unique @db.VarChar(100)
  unit UnitType @default(EA)

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  Price Price[]
}

// ------ PRICE MODEL
enum PriceType {
  COMMON
  DEAL
}

model Price {
  id              String  @id @default(uuid()) @db.Char(36)
  userId          String? @db.Char(36)
  productId       String? @db.Char(36)
  establishmentId String? @db.Char(36)

  value                           Decimal   @db.Decimal(10, 2)
  type                            PriceType @default(COMMON)
  isProductWithNearExpirationDate Boolean   @default(false)
  expiresAt                       DateTime?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  user          User?          @relation(fields: [userId], references: [id])
  product       Product?       @relation(fields: [productId], references: [id])
  establishment Establishment? @relation(fields: [establishmentId], references: [id])
}
